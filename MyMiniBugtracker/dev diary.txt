10.05.2012 - Beginn der Entwicklung eines webbasierten Bug-Trackers, 

Zunächst möchte ich das Projekt mit GIT versionieren. Dazu benötige ich einen GIT-Hub Account. 
Ich probiere den Account zu verwenden den ich in der Firma angelegt habe. 
Irgendwie kann ich das neu angelegte Repository nicht mehr auschecken. Irgend so ein SSH fehler. 
Ich folge der Installationsanweisung von github (GIT for Windows). Wieder wieder ich das Problem, dass ich mich nicht anmelden kann. 
in der Bash erscheint ständig "permission denied". Mein RSA Key Fingerprint weicht von dem ab, was github.com mir anzeigt. 

Lösung: Aus irgendwelchen gründen hat der keygen die keyfiles in einem Falschen Ordner abgelegt. 
Zielordner sollte sein: C:\Users\Fiederling Daniel\.ssh

Jetzt muss ich das Projekt irgendwie in Eclipse auschecken. 
Nach etwas rumprobieren habe ich es geschafft, indem ich mir in Eclipse einen weiteren SSH-Key angelegt habe und den ebenfalls auf github bekannt gemacht habe. 
Es muss außerdem ein neues Vaadin Projekt angelegt werden, dass dann im heruntergeladenen Repository geshared wird. 
Ich bekomme build Path Errors die ich nicht beheben kann, das Projekt läuft aber auch mit Fehlern. 
Ich versuche das Projekt in ein Maven Projekt zu konvertieren irgendwie läuft dann garnichts mehr und ich komm auch hier auf keinen grünen Zweig und bin langsam frustriert... 

Nachdem ich jetzt 3 Stunden mit Setup verbracht habe will jetzt endlich Programmieren um ergebnisse zu sehen.

Die eigentliche Entwicklung lief dann recht zügig:
Zuerst die Model-Klasse implementiert.
Dann die rudimentäre Benutzeroberfläche in der alle Bugs tabellarisch angezeigt werden.Hierfür habe ich zunächst eine Klasse geschrieben 
die Testdaten in die Tabelle schreibt.
Anschließend habe ich Formular geschrieben um neue Bugs anzulegen. Hier gab es einige Probleme mit den SelectBoxen die ich nicht in der 
createFieldFactory Methode erzeugen konnte. Als workaround habe ich die Felder nachträglich hinzugefügt auch wenn ich das nicht ganz so sauber finde.

Sobald das Formular fertig war, wollte ich die Informationen in eine Db4o Datenbank schreiben. Also schnell nen Service und die DAO erzeugt. 
Das schreiben in die DB hat auch wunderbar funktioniert. Nur als ich die Daten dann wieder komplett auslesen wollte hat mich irgendsoeine 
DatabaseClosedException in den Wahnsinn getrieben. Dabei hätte das Auslesen ja prinzipiell funktioniert, solange ich die db nicht schließe. 
Allerdings konnten dann auch keine Bugs mehr gespeichert werden, weil die DB gelockt ist... Irgendwie komisch und für mich jetz 
erstmal nicht nachvollziehbar, warum das schließen nicht funktioniert. 

Ich höre jetzt auf und checke noch schnell die Files ein. 



15.05.2012 Umstellung auf Maven

Nach dem ersten Feedback von Thomas möchte ich mein Projekt auf Maven umstellen. Mir ist eingefallen, dass ich noch keine WTP integration für Maven installiert habe. 
Also gleich mal nachholen. Jetzt versuche ich das Vaadin Projekt in ein Maven Projekt zu konvertieren. Ok, dann die Dependencies für Vaadin in die .pom einfügen und mal schauen was passiert. 
Hmm... server startet nicht.

java.lang.IllegalArgumentException: Document base \workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\spring2 does not exist or is not a readable directory

Was will der denn mit spring2? das hab ich doch noch garnicht installiert bei mir? Mal googlen -- Ah, evtl. sollte ich mal den Server neu installieren. 
Jep, jetzt startet er, aber auf meine Anwendung kann ich nicht zugreifen:

"description The requested resource (/MyMiniBugtracker/) is not available."

Was ist das jetzt schon wieder? Nach einiger Zeit die idee: Wurde die Anwendung richtig deployed? - Nein, es fehlen die classes, also rausfinden wo die classes hin compilliert werden und dann mit in die deployment-assembly.

Jetzt endlich funktioniert es. Nurnoch eine db4o fehlermeldung, ja natürlich brauche ich die dependency auch noch. Schnell mal gucken wo ich das her bekomm. 
Das hier sieht doch ganz gut aus: http://stackoverflow.com/questions/2303424/maven-and-db4o-dependency
JEAH!!! ENDLICH LÄUFT ES!!!. 


Weiterer Feedbackpunkt von Thomas: Spring in das Projekt integrieren. 
Ein glück hab ich schon maven am laufen ;-) Die Dependencies einfach in die POM einfügen. 

Wo krieg ich das jetzt her? 
http://mirrors.ibiblio.org/pub/mirrors/maven2/org/springframework/spring-core/ - Wenn ich jetzt noch wüsste welche Version wir in der Firma verwenden. Ich glaube 2...
http://blog.springsource.com/2011/01/17/green-beans-getting-started-with-maven-and-spring/ - Den Artikel sollte ich mir mal im Detail zu Gemüte führen

Irgendwie muss ich jetzt mein Projekt doch konfigurieren um Autowiring nutzen zu können. *an die application-context.xml denkt*

https://vaadin.com/wiki/-/wiki/Main/Spring%20Integration - Vaadin bietet dazu ein Tutorial, hier geht es demnächst weiter...



18.05.2012 - Spring Integration

So... hat jetzt ne Weile gedauert, aber am Ende habe den Server und die Applikation wieder am laufen und Spring konfiguriert. 
In erster linie habe ich mich am Vaadin Tutorial orientiert. Nachdem ich das alles so zusammenkopiert hatte wie es auf der Tutorialseite beschrieben ist, startete natürlich mein Server nicht. 
Irgend so ne Exception beim Laden des ContextLoaderListener. Auf der Suche nach der lösung bin ich dann irgendwann auf diese Seite gestoßen:

http://www.mkyong.com/spring/spring-error-classnotfoundexception-org-springframework-web-context-contextloaderlistener/

Die hat mir zwar nicht ganz die Lösung geliefert, aber mich auf die Idee gebracht einfach mal das hier in die Pom einzufügen: 

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.2</version>
		</dependency>

Siehe da, der Server startet. Warum wird das nicht gleich auf der Vaadin Seite beschrieben? 

Danach wollte ich einfach mal rein debuggen um zu schauen ob das Autowiring funktioniert, aber allerdings funktioniert aus irgendwelchen Voodoo-Gründen der STRG+O shortcut nimmer. Und es wurde eine Fehlermeldung angezeigt. 
"The Resource is not on Build Path" oder so. Weiß der Geier wo ich in letzter Zeit alles rumgepfuscht hab. Also erstmal das Projekt neu auschecken, jetzt weiß ich ja wie ich Spring anpacken muss.

Gleiches Problem - Lösung aber ganz einfach: 

unter properties-->Java Build Path:

Source Folders on Build Path --> Add Folder...: 
/src Ordner Einfügen

und als Default Output Folder: 
MyMiniBugtracker/WEB-INF/classes

Jetzt startet wieder alles. Aber das Autowiring läuft noch nicht so läuft wie ich mir das vorstelle, ich kriege noch ständig ne nullpointer Exception. Ich muss nochmal nachlesen wie das Autowiring funktioniert. 
Hier geht es demnächst weiter.



22.05.2012

Ich habe jetzt 3 Std. die verschiedensten Dinge Probiert das Autowiring in den Griff zu bekommen und es einfach nicht hinbekommen. Was mach ich nur falsch? Habe ich was übersehen? 
Diese Quellen wirkten besonders interessant:
http://java9s.com/spring-framework/spring-auto-wiring-bytype-byname-constructor
http://stackoverflow.com/questions/3659720/spring-3-autowire-in-standalone-application
https://vaadin.com/forum/-/message_boards/view_message/112083

dennoch konnte ich das Problem nicht lösen. Jetzt brauche ich ein Paar Erfolgserlebnisse und beginne die Anmerkungen von Thomas zu bearbeiten. 
Als erstes möchte ich die Texte in eine messages.properties Datei auslagern. 

wie das am schnellsten geht verrät mir das Book of Vaadin
https://vaadin.com/book/-/page/rapid.i18n.html

Erstmal nur bei einer Klasse um das zu testen.

Wäre ja zu schön wenn das alles glatt laufen würde... Mal wieder eine Exception.
java.util.MissingResourceException: Can't find bundle for base name messagess, locale de_DE
Lösungsidee durch: http://stackoverflow.com/questions/8124638/jsf-bundle-loading-failure

Scheint so, als wäre der Name der Properties Datei fehlerhaft. Also nochmal alles Rückgängig machen und beim Extrahieren darauf achten, dass die Datei erstmal messages.properties heißt. Diese wird immer als Fallback hergenommen. 

Tatsächlich! Jetzt funktioniert es! Also jetzt alle notwendigen Messages extrahieren und dann in einem zweiten Schritt schöne Namen für die Einträge vergeben.

Dann einfach mal Auis kommentare weiter anschauen und einen nach den anderen anpacken. 

Ich stelle fest dass bei einem commit des Formulars nicht alle felder gleichzeitig validiert werden, sondern schon nach dem ersten Feld eine Exception geworfen wird. Evtl. muss ich die Validierung der Felder vor dem 
Commit noch selbst übernehmen. 
